Project 2 Software Development for algorithmic problems.

BivariatePolynomial.h	:	class to store a bivariate polynomial

Matrix.h	:	class to store an NxM matrix

Parse.h		: 	class with static functions to read the input from file or from stdin

Polynomial.h	:	class for the representation of a 1-variable polynomial (could have used the Bivariate polynomial class with a y degree 0 but we like to keep the implementation seperate and modular)

SylvesterMatrix.h	:	class for the Sylvester Matrix a 2dimensional matrix with pointers to Polynomial objects

SylvesterPolynomial.h	:	the final form of the Sylvester Matrix a polynomial of matrices

ProblemSolver.h		:	class containing every necessary funtion for the solution

Solution.h		:	class for the final solution (y,x,multiplicity)



the matrices are printed inverted (the biggest power is in the smallest position) but are actually in memory in reverse the biggest power in the biggest position.

The project is compiled with terminal command : make
or cleaned with make clean

and run with the command ./exe -read -i InputFile -d1 2 -d2 3 -solve 8
or  ./exe -generate -d1 2 -d2 2 -solve 8
of ./exe -points -d1 2 -d2 2 -solve 7
(1st line the first polynomial 2nd line the second).
//!Important the only thing you have to consider in parsing is that the first number in the polynomial must always be the zero power coefficient

GoogleTest installation:

tar -xzvf gtest-version.tar.gzcd gtest-version
mkdir mybuild
cd mybuild
cmake -G"Unix Makefiles" ..
make
cp -r ../include/gtest /usr/local/include
cp lib*.a /usr/local/lib

tested input polynomials :

-3+2*y*x+y
5+y*x^2+4*x-y

1+y*x-x+y
1+y*x^2-x^2+2*y*x+y+x

1+x^2-y
-8+x^2+5*y

1+2*x+y*x^2+5*y*x^3+36*y^2*x^3
-3+9*y+4*x^2+64*y^2


The project was developed by :
Γερασιμος-Αλέξανδρος παναγιωτόπουλος AM : 1115201200135
And
Νίκος Θάνος AM : 11115201200039
